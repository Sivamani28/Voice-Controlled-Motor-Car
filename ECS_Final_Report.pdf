Title: - Voice Controlled Motor Car
Under the guidance of:
Prof. SUDHEER MANALAMPALLI
Members involved:
➢ THIMMISETTY SAI RAM -21BCE9220
➢ RYALI PURNA SRI SAI SUMANTH -21BCE9227
➢ VULUSULA AVINASH-21BEC7168
➢ CHAPATI VENKATA DEVA KUMAR REDDY - 21BEC7172
➢ THUDEDDY SRI VARSHITH -21BCE9370
➢ NERELLA PAVAN -21BCE9149
ABSTRACT OF THE PROJECT:
First off, this is a voice-controlled robotic automobile that can identify obstacles and will stop
or move out of the way as needed. This project was created in a way that allows voice
instructions to operate the robotic vehicle. An Android application with a microcontroller is
used for the necessary duties. Bluetooth technology establishes a connection between the
Android app and the automobile. Both buttons in an application and vocal instructions from
the user can be used to control the robot. The robot can move with the help of microcontrollers
on the receiver side that are connected to DC servo motors. Commands from the application
are translated into digital signals and transmitted to the robot through a Bluetooth RF
transmitter with the necessary range (about 10 meters). The microcontroller, which operates
the DC motors, gets the command from the Bluetooth and transmits it to it. A voice-controlled
robot car's goal is to follow the user's directions and carry out the necessary duty. We can utilise
this prototype in a variety of applications by making the necessary adjustments and completing
the necessary adoptions. For all impaired persons, this is more helpful. also helpful for spying
on people. It can also access locations where people cannot, such as into tunnels where
individuals might not be able to enter and perform the necessary work there or obtain certain
information. Going into the blasting area or area with poisonous gases to complete some work,
is also helpful in mining sites.
Index
 Title Page
Summary of the project 2
Introduction 4
Problem Definition 4
Objectives 5
Background 5
Procedure 6
Circuit Diagram 11
Results 12
Discussion 12
Conclusion 12
Future Scope 13
References 13
Codes in Appendix 14
INTRODUCTION:
Our aim is to make a robot vehicle which can be controlled by the voice command of a
person. Normally these types of systems are called as Speech Controlled Automation System
(SCAS). Our design is a prototype of the above-mentioned system. The idea is to create a sort
of robot which going to be driven by voice commands. The robot is remotely controlled by a
mobile phone; there are many articles that show the communication between a robot and
smart phone. Smart phone is a very good interface for remotely automating the robot. It
contains many features that can be helpful.
In current scenario vehicles are manually controlled and all are done by the person who is
driving the vehicle. Every action like start and stop, applying brake, gear transmission,
acceleration requires human effort. But nowadays new technologies have been developed that
can be integrated with the conventional vehicles to new vehicle form. In the technology era,
the space between the physical and the digital world is brought closer by the introduction of
gesture concept. For all dangerous tasks, we prefer technology rather than people. Even though
these robots are being controlled manually in the early stages, these can now be controlled via
voice and gestures. This technology of gesture and voice recognition can be defined by the
interaction between the computer and the body language of human beings. This constructs the
communication link between technology and mankind. The target of this work is to upgrade
the complete security to the robot and to simplify the controlling mechanism [1]. The voice
directions are handled, utilizing an advanced mobile phone.
PROBLEM DEFINITION:
We frequently witness instances in daily life where a person is unable to enter a location despite
the fact that their physical makeup makes them unsuited to specific situations. as walking into
a dark, tight space, going into a mine with no oxygen or dangerous gases, or saving a child who
fell into a well. Sometimes we may nod off while driving, thus we need a system that will
operate automatically to ensure the driver gets to their destination safely.
OBJECTIVES:
1)To go to the places where humans cannot go and explore.
2)To make the automated vehicle which detects the obstacles and avoids it.
3) Even the driver can control the run with the help of mobile.
4)The driver can control the vehicle with the voice commands, meanwhile he was doing any
another task for some time
BACKGROUND:
The ability of a home automation system to perform actions to start or control appliances or
gadgets in the house defines the system. The variety of appliances on the market today is
expanding daily. As a result, the management of such devices is receiving increasing
attention. The controlling has traditionally been done manually, such as by going to the
switch and turning it on while walking there. However, the invention of the remote control
provided a substitute method for the user to operate such an item without having to go over to
it. From the aforementioned, other improvements in the controlling mechanism have been
studied. The suggested development involves using voice as the controlling medium to turn
on or off the device.
PROCEDURE:
The components required for the project are:
• Arduino UNO board -1
• L293 motor driver -1
• Ultrasonic sensor -1
• Bluetooth module -1
• Servo motor -1
• Gear motor -4
• Robot wheel -4
• Li-ion battery (Re-chargeable) -2
• Li-ion battery holder -1
• Jumper wires
• Cardboard -1
• IR sensor-1
These are easily available in online stores like: Amazon, Flipkart and many other...
PROCESS:
1.Make sure that you haven’t miss any component which are required for the project.
2.Identify the components.
Arduino UNO board L293 motor driver
Ultrasonic sensor Bluetooth module
Servo motor 4 Gear motors
Robot wheel 2 Li-ion battery
Li-ion battery holder Jumper wires
Cardboard (18*12)
3.At the first, we take the cardboard and glue the four gear motors at the corners of the board
as shown in below fig;
4.Bring the motor wires to the other side and attach wheels to the 4 Gear motors as shown in
fig;
5.Fix Arduino board on centre of the cardboard with 4-mini screws as shown in fig;
6.Fix Motor driver upon Arduino board as shown in figures;
7.Connect the wires of the 4 motors to the motor driver.
8.While connecting wires use the circuit diagram given below
9.Now, attach Servo motor to the board with glue as shown below;
10.Attach jumper wires to the ultrasonic sensor and fix the ultrasonic sensor to the servo motor
as shown in fig;
11.Connect the jumpers with the help of circuit diagram.
12.Fix the battery holders on the board and connect the wires to the motor driver by observing
connections in circuit diagram.
13.Also attach the IR-sensor to the Arduino car by observing the connections in circuit
diagram.
14.Finally, connect Bluetooth module to catch the signals from the user as shown in fig;
15.Now, remove the Bluetooth module and connect it to AF motor library through USB and
upload the code into Arduino board and remove the USB cable.
16.Now, switch on the power supply from batteries and our Arduino car is ready.
17.Arduino car is ready to take commands from the user and execute it.
Circuit diagram:
RESULT:
The project was finished in accordance with the requirements and specifications. The voice
can be used to control simple movements. The suggested system is essentially built on
robotic vehicles that may be driven by speaking commands that are received via an Android
app. The user who is running the project can issue speech commands to the voice-controlled
automobile. The user's mobile device must have an Android app loaded for them to use voice
commands. Within the Android app, speech recognition is performed, and after that, the
appropriate command is given to the voice-controlled robot car. The vehicle's microcontroller
decodes these commands and communicates the correct instruction to the motors.
DISCUSSION:
From a technological standpoint, speech recognition has a lengthy history and has seen
several significant technological advances. Recent developments in deep learning and big
data have improved the field. Not only have there been an increase in academic papers
published in the topic, but more significantly, the global industry has adopted a number of
deep learning techniques for creating and implementing voice recognition systems.
CONCLUSION:
This project is a prototype for a voice-controlled robot that can detect obstacles and avoid
collisions on its own. It is composed of an Arduino, a motor driver, four DC motors, a servo
driver, an ultrasonic sound sensor, an IR sensor, and the body and wheels of a vehicle. The
design is flexible and can be modified according to user specifications. The sensors,
communication module, and other components can be changed according to the
requirements. By developing this prototype with the necessary adoptions, we can expand the
scope of use of this type of vehicle in the future. It can come up with many advantages in
helping the disabled, including reducing human effort in delivery, defence systems,
archaeological searching, rescue operations, and forest conservation.
FUTURE SCOPE
• It can be used to carry goods and deliver it to target by using GPS Location and
making changes in carrying and power capacity
• It is used in places where people can't reach like pipelines, tunnels, mining areas and
poisonous areas
• It is used to spy on others.
• It used in defence with gun system in military operations with necessary changes in it.
• It can be useful for disabled persons for many purposes
• It can be developed into a life-sized world vehicle tor transportation purpose.
• It can be integrated with wheelchairs for assisting disabled persons.
• It can be used to move and place light weight objects.
REFERENCES:
• https://www.arduino.cc/
• https://cloud.arduino.cc/
• https://www.sciencedirect.com/science/article/abs/pii/S1574013721000046
• https://www.instructables.com/circuits/arduino/projects/
• https://www.youtube.com/results?search_query=arduino+projects
• https://www.youtube.com/watch?v=1lrf50hBsHA
• https://www.youtube.com/watch?v=j7yltf_LtKQ
• https://www.youtube.com/watch?v=yAV5aZ0unag
• https://www.youtube.com/results?search_query=arduino+projects
• Programming Arduino: Getting Started with Sketches (second edition).
• Arduino Workshop: A Hands-On Introduction with 65 Projects 1st Edition.
CODES IN APPENDIX:
#include <Servo.h>
#include <AFMotor.h>
#include <NewPing.h>
#define IR1 A0
#define IR A5
#define MAX_DISTANCE 300
#define Echo A0
#define Trig A1
#define motor 10
#define Speed 140
#define spoint 103
NewPing sonar(Trig, Echo, MAX_DISTANCE);
char value;
int distance;
int Left;
int Right;
int L = 0;
int R = 0;
int L1 = 0;
int R1 = 0;
Servo servo;
AF_DCMotor M1(1);
AF_DCMotor M2(2);
AF_DCMotor M3(3);
AF_DCMotor M4(4);
void setup() {
 Serial.begin(9600);
 pinMode(Trig, OUTPUT);
 pinMode(Echo, INPUT);
 servo.attach(motor);
 M1.setSpeed(Speed);
 M2.setSpeed(Speed);
 M3.setSpeed(Speed);
 M4.setSpeed(Speed);
}
void loop() {
 int IR_Sensor = digitalRead(IR);
 int IR_Sensor1 = digitalRead(IR1);
 voicecontrol();

 // backward();
 // delay(1000);
}
void Bluetoothcontrol() {
 if (Serial.available() > 0) {
 value = Serial.read();
 Serial.println(value);
 }
 if (value == 'F') {
 forward();
 } else if (value == 'B') {
 backward();
 } else if (value == 'L') {
 left();
 } else if (value == 'R') {
 right();
 } else if (value == 'S') {
 Stop();
 }
}
void Obstacle(int IR_Sensor1) {


 if (IR_Sensor1 == 0 ) {
 // forward();
 Stop();
 delay(200);
 backward();
 delay(100);
 Stop();
 L = leftsee();
 servo.write(spoint);
 delay(800);
 R = rightsee();
 servo.write(spoint);
 if (L < R) {
 right();
 delay(500);
 Stop();
 delay(200);
 } else if (L > R) {
 left();
 delay(500);
 Stop();
 delay(200);
 }
 } else {
 forward();
 }
}
void voicecontrol() {
 if (Serial.available() > 0)
 {
 value = Serial.read();
 Serial.println(value);
 if (value == '^') {
 //forward();
 int IR_Sensor1 = digitalRead(IR1);

 while(IR_Sensor1 != 0){
 int IR_Sensor1 = digitalRead(IR1);
 if(IR_Sensor1 == 0){
 Stop();
 }
 else{
 forward();
 }
 value = Serial.read();
 if(value != '^'){
 Stop();
 break;
 }
 }
 }
 else if (value == '-') {
 int IR_Sensor = digitalRead(IR);

 while(IR_Sensor != 0){
 int IR_Sensor = digitalRead(IR);
 if(IR_Sensor == 0){
 Stop();
 }
 else{
 backward();
 }
 value = Serial.read();
 if(value != '^'){
 Stop();
 break;
 }
 }
 } else if (value == '<') {
 L = leftsee();
 servo.write(spoint);
 if (L >= 0 ) {
 left();
 delay(500);
 Stop();
 } else if (L < 10) {
 Stop();
 }
 //left();
 //forward();
 }
 else if (value == '>') {
 R = rightsee();
 servo.write(spoint);
 if (R >= 0 ) {
 printf("checking ");
 right();
 delay(500);
 Stop();
 }
 else if (R < 10) {
 Stop();
 printf("not checking ");
 }
 //right();
 //forward();
 }
 else if (value == '*') {
 Stop();
 }
 }
}
int ultrasonic() {
 digitalWrite(Trig, LOW);
 delayMicroseconds(4);
 digitalWrite(Trig, HIGH);
 delayMicroseconds(10);
 digitalWrite(Trig, LOW);
 long t = pulseIn(Echo, HIGH);
 long cm = t / 29 / 2; //time convert distance
 return cm;
}
void forward() {
 M1.run(FORWARD);
 M2.run(FORWARD);
 M3.run(FORWARD);
 M4.run(FORWARD);
 }
void backward() { // we want to sent that mesage
 M1.run(BACKWARD);
 M2.run(BACKWARD);
 M3.run(BACKWARD);
 M4.run(BACKWARD);
 }
void right() {
 M1.run(BACKWARD);
 M4.run(BACKWARD);
 M3.run(FORWARD);
 M2.run(FORWARD);
}
void left() {
 M1.run(FORWARD);
 M4.run(FORWARD);
 M3.run(BACKWARD);
 M2.run(BACKWARD);
}
void Stop() {
 M1.run(RELEASE);
 M2.run(RELEASE);
 M3.run(RELEASE);
 M4.run(RELEASE);
}
int rightsee() {
 servo.write(50);
 int IR_Sensor1 = digitalRead(IR1);
 delay(800);
 return IR_Sensor1;
}
int leftsee() {
 servo.write(180);
 int IR_Sensor1 = digitalRead(IR1);
 delay(800);
 return IR_Sensor1;
}
